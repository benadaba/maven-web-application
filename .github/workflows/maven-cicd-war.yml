name: Maven CI Pipeline

on:
  push:
    branches:
      - main1
      - master1
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    # Checkout the repository
    - name: Checkout repository
      uses: actions/checkout@v3

    # Set up JDK 11 (or whichever version you need)
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'adopt'

    # Cache Maven dependencies to speed up builds
    - name: Cache Maven packages
      uses: actions/cache@v3
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-maven

    # Build and run tests with Maven
    - name: Build and test with Maven
      run: mvn clean install

    # SonarQube analysis with remote server authentication
    - name: SonarQube Scan
      run: mvn sonar:sonar -Dsonar.host.url=http://3.8.211.24:9000 -Dsonar.login=${{ secrets.SONAR_USERNAME }} -Dsonar.password=${{ secrets.SONAR_PASSWORD }}
    
    - name: Configure Maven settings for nexus
      run: |
        mkdir -p ~/.m2
        echo "<settings>\
        <servers>\
            <server>\
                <id>nexus</id>\
                <username>${{ secrets.NEXUS_USERNAME }}</username>\
                <password>${{ secrets.NEXUS_PASSWORD }}</password>\
            </server>\
        </servers>\
        </settings>" > ~/.m2/settings.xml    

        
    - name: Upload to Nexus
      run: mvn deploy
      env:
        MAVEN_USERNAME: ${{ secrets.NEXUS_USERNAME }}
        MAVEN_PASSWORD: ${{ secrets.NEXUS_PASSWORD }}

    # Step 1: Install SSH client (optional, most runners have it by default)
    - name: Install SSH
      run: sudo apt-get install -y ssh

    # Step 2: Add SSH key
    - name: Add SSH Key
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.EC2_PRIVATE_KEY }}" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa

    # Step 3: Copy file from runner to EC2 instance
    - name: Copy file to EC2
      run: |
        scp -o StrictHostKeyChecking=no target/*.war ec2-user@172.31.0.125:/opt/tomcat9/webapps


    - name: Deploy to Tomcat
      run: |
        curl -T target/*.war "http://${{ secrets.TOMCAT_HOSTNAME }}/manager/text/deploy?path=/maven-app&update=true"
      env:
        TOMCAT_USERNAME: ${{ secrets.TOMCAT_USERNAME }}
        TOMCAT_PASSWORD: ${{ secrets.TOMCAT_PASSWORD }}
